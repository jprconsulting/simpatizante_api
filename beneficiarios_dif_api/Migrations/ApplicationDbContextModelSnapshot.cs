// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using beneficiarios_dif_api;

#nullable disable

namespace beneficiariosdifapi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Candidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("longtext");

                    b.Property<string>("ApellidoPaterno")
                        .HasColumnType("longtext");

                    b.Property<int?>("CargoId")
                        .HasColumnType("int");

                    b.Property<string>("Emblema")
                        .HasColumnType("longtext");

                    b.Property<bool>("Estatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Foto")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombres")
                        .HasColumnType("longtext");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<string>("Sobrenombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.ToTable("Candidatos");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Casilla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Clave")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Casillas");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Claim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<bool>("ClaimValue")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Incidencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CasillaId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext");

                    b.Property<string>("Foto")
                        .HasColumnType("longtext");

                    b.Property<string>("Latitude")
                        .HasColumnType("longtext");

                    b.Property<string>("Longitude")
                        .HasColumnType("longtext");

                    b.Property<string>("Retroalimentacion")
                        .HasColumnType("longtext");

                    b.Property<int?>("TipoIncidenciaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CasillaId");

                    b.HasIndex("TipoIncidenciaId");

                    b.ToTable("Incidencias");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("EstadoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Operador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("longtext");

                    b.Property<string>("ApellidoPaterno")
                        .HasColumnType("longtext");

                    b.Property<bool>("Estatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombres")
                        .HasColumnType("longtext");

                    b.Property<int?>("SeccionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SeccionId");

                    b.ToTable("Operadores");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.ProgramaSocial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ProgramasSociales");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreRol")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Rols");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Seccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Clave")
                        .HasColumnType("longtext");

                    b.Property<int?>("MunicipioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MunicipioId");

                    b.ToTable("Secciones");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Simpatizante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("longtext");

                    b.Property<string>("ApellidoPaterno")
                        .HasColumnType("longtext");

                    b.Property<string>("CURP")
                        .HasColumnType("longtext");

                    b.Property<string>("Domicilio")
                        .HasColumnType("longtext");

                    b.Property<int?>("EstadoId")
                        .HasColumnType("int");

                    b.Property<bool>("Estatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IDMEX")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Latitud")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Longitud")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasColumnType("longtext");

                    b.Property<int?>("ProgramaSocialId")
                        .HasColumnType("int");

                    b.Property<int?>("SeccionId")
                        .HasColumnType("int");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("MunicipioId");

                    b.HasIndex("ProgramaSocialId");

                    b.HasIndex("SeccionId");

                    b.ToTable("Simpatizantes");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.TipoIncidencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Indicadores");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .HasColumnType("longtext");

                    b.Property<bool>("Estatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("OperadorId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId")
                        .IsUnique();

                    b.HasIndex("OperadorId")
                        .IsUnique();

                    b.HasIndex("RolId")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Visita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaHoraVisita")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Foto")
                        .HasColumnType("longtext");

                    b.Property<int?>("OperadorId")
                        .HasColumnType("int");

                    b.Property<string>("Servicio")
                        .HasColumnType("longtext");

                    b.Property<int?>("SimpatizanteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.HasIndex("OperadorId");

                    b.HasIndex("SimpatizanteId");

                    b.ToTable("Visitas");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Voto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaHoraVot")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Foto")
                        .HasColumnType("longtext");

                    b.Property<int>("SimpatizanteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SimpatizanteId")
                        .IsUnique();

                    b.ToTable("Voto");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Candidato", b =>
                {
                    b.HasOne("beneficiarios_dif_api.Entities.Cargo", "Cargo")
                        .WithMany("Candidatos")
                        .HasForeignKey("CargoId");

                    b.Navigation("Cargo");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Claim", b =>
                {
                    b.HasOne("beneficiarios_dif_api.Entities.Rol", "Rol")
                        .WithMany("Claims")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Incidencia", b =>
                {
                    b.HasOne("beneficiarios_dif_api.Entities.Casilla", "Casilla")
                        .WithMany("Incidencias")
                        .HasForeignKey("CasillaId");

                    b.HasOne("beneficiarios_dif_api.Entities.TipoIncidencia", "TipoIncidencia")
                        .WithMany("Incidencias")
                        .HasForeignKey("TipoIncidenciaId");

                    b.Navigation("Casilla");

                    b.Navigation("TipoIncidencia");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Municipio", b =>
                {
                    b.HasOne("beneficiarios_dif_api.Entities.Estado", "Estado")
                        .WithMany("Municipios")
                        .HasForeignKey("EstadoId");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Operador", b =>
                {
                    b.HasOne("beneficiarios_dif_api.Entities.Seccion", "Seccion")
                        .WithMany()
                        .HasForeignKey("SeccionId");

                    b.Navigation("Seccion");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Seccion", b =>
                {
                    b.HasOne("beneficiarios_dif_api.Entities.Municipio", "Municipio")
                        .WithMany("Secciones")
                        .HasForeignKey("MunicipioId");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Simpatizante", b =>
                {
                    b.HasOne("beneficiarios_dif_api.Entities.Estado", "Estado")
                        .WithMany("Simpatizantes")
                        .HasForeignKey("EstadoId");

                    b.HasOne("beneficiarios_dif_api.Entities.Municipio", "Municipio")
                        .WithMany("Simpatizantes")
                        .HasForeignKey("MunicipioId");

                    b.HasOne("beneficiarios_dif_api.Entities.ProgramaSocial", "ProgramaSocial")
                        .WithMany("Simpatizantes")
                        .HasForeignKey("ProgramaSocialId");

                    b.HasOne("beneficiarios_dif_api.Entities.Seccion", "Seccion")
                        .WithMany("Simpatizantes")
                        .HasForeignKey("SeccionId");

                    b.Navigation("Estado");

                    b.Navigation("Municipio");

                    b.Navigation("ProgramaSocial");

                    b.Navigation("Seccion");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Usuario", b =>
                {
                    b.HasOne("beneficiarios_dif_api.Entities.Candidato", "Candidato")
                        .WithOne("Usuario")
                        .HasForeignKey("beneficiarios_dif_api.Entities.Usuario", "CandidatoId");

                    b.HasOne("beneficiarios_dif_api.Entities.Operador", "Operador")
                        .WithOne("Usuario")
                        .HasForeignKey("beneficiarios_dif_api.Entities.Usuario", "OperadorId");

                    b.HasOne("beneficiarios_dif_api.Entities.Rol", "Rol")
                        .WithOne("Usuario")
                        .HasForeignKey("beneficiarios_dif_api.Entities.Usuario", "RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidato");

                    b.Navigation("Operador");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Visita", b =>
                {
                    b.HasOne("beneficiarios_dif_api.Entities.Candidato", "Candidato")
                        .WithMany("Visitas")
                        .HasForeignKey("CandidatoId");

                    b.HasOne("beneficiarios_dif_api.Entities.Operador", "Operador")
                        .WithMany("Visitas")
                        .HasForeignKey("OperadorId");

                    b.HasOne("beneficiarios_dif_api.Entities.Simpatizante", "Simpatizante")
                        .WithMany("Visitas")
                        .HasForeignKey("SimpatizanteId");

                    b.Navigation("Candidato");

                    b.Navigation("Operador");

                    b.Navigation("Simpatizante");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Voto", b =>
                {
                    b.HasOne("beneficiarios_dif_api.Entities.Simpatizante", "Simpatizante")
                        .WithOne("Voto")
                        .HasForeignKey("beneficiarios_dif_api.Entities.Voto", "SimpatizanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Simpatizante");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Candidato", b =>
                {
                    b.Navigation("Usuario");

                    b.Navigation("Visitas");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Cargo", b =>
                {
                    b.Navigation("Candidatos");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Casilla", b =>
                {
                    b.Navigation("Incidencias");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Estado", b =>
                {
                    b.Navigation("Municipios");

                    b.Navigation("Simpatizantes");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Municipio", b =>
                {
                    b.Navigation("Secciones");

                    b.Navigation("Simpatizantes");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Operador", b =>
                {
                    b.Navigation("Usuario");

                    b.Navigation("Visitas");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.ProgramaSocial", b =>
                {
                    b.Navigation("Simpatizantes");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Rol", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Seccion", b =>
                {
                    b.Navigation("Simpatizantes");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Simpatizante", b =>
                {
                    b.Navigation("Visitas");

                    b.Navigation("Voto");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.TipoIncidencia", b =>
                {
                    b.Navigation("Incidencias");
                });
#pragma warning restore 612, 618
        }
    }
}
