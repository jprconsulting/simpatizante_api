// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using beneficiarios_dif_api;

#nullable disable

namespace beneficiariosdifapi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231228043350_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("beneficiarios_dif_api.Entities.AreaAdscripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<bool>("Estatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AreasAdscripcion");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Beneficiario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("longtext");

                    b.Property<string>("ApellidoPaterno")
                        .HasColumnType("longtext");

                    b.Property<string>("CURP")
                        .HasColumnType("longtext");

                    b.Property<string>("Domicilio")
                        .HasColumnType("longtext");

                    b.Property<bool>("Estatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Latitud")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Longitud")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasColumnType("longtext");

                    b.Property<int?>("ProgramaSocialId")
                        .HasColumnType("int");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MunicipioId");

                    b.HasIndex("ProgramaSocialId");

                    b.ToTable("Beneficiarios");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Claim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<bool>("ClaimValue")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Indicador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("longtext");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<int>("RangoFinal")
                        .HasColumnType("int");

                    b.Property<int>("RangoInicial")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Indicadores");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.ProgramaSocial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Acronimo")
                        .HasColumnType("longtext");

                    b.Property<int?>("AreaAdscripcionId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("longtext");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<bool>("Estatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AreaAdscripcionId");

                    b.ToTable("ProgramasSociales");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreRol")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Rols");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("longtext");

                    b.Property<string>("ApellidoPaterno")
                        .HasColumnType("longtext");

                    b.Property<int?>("AreaAdscripcionId")
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .HasColumnType("longtext");

                    b.Property<bool>("Estatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaAdscripcionId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Visita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("BeneficiarioId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaHoraVisita")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Foto")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BeneficiarioId");

                    b.ToTable("Visitas");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Beneficiario", b =>
                {
                    b.HasOne("beneficiarios_dif_api.Entities.Municipio", "Municipio")
                        .WithMany("Beneficiarios")
                        .HasForeignKey("MunicipioId");

                    b.HasOne("beneficiarios_dif_api.Entities.ProgramaSocial", "ProgramaSocial")
                        .WithMany("Beneficiarios")
                        .HasForeignKey("ProgramaSocialId");

                    b.Navigation("Municipio");

                    b.Navigation("ProgramaSocial");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Claim", b =>
                {
                    b.HasOne("beneficiarios_dif_api.Entities.Rol", "Rol")
                        .WithMany("Claims")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.ProgramaSocial", b =>
                {
                    b.HasOne("beneficiarios_dif_api.Entities.AreaAdscripcion", "AreaAdscripcion")
                        .WithMany("ProgramasSociales")
                        .HasForeignKey("AreaAdscripcionId");

                    b.Navigation("AreaAdscripcion");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Usuario", b =>
                {
                    b.HasOne("beneficiarios_dif_api.Entities.AreaAdscripcion", "AreaAdscripcion")
                        .WithMany("Usuarios")
                        .HasForeignKey("AreaAdscripcionId");

                    b.HasOne("beneficiarios_dif_api.Entities.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AreaAdscripcion");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Visita", b =>
                {
                    b.HasOne("beneficiarios_dif_api.Entities.Beneficiario", "Beneficiario")
                        .WithMany("Visitas")
                        .HasForeignKey("BeneficiarioId");

                    b.Navigation("Beneficiario");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.AreaAdscripcion", b =>
                {
                    b.Navigation("ProgramasSociales");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Beneficiario", b =>
                {
                    b.Navigation("Visitas");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Municipio", b =>
                {
                    b.Navigation("Beneficiarios");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.ProgramaSocial", b =>
                {
                    b.Navigation("Beneficiarios");
                });

            modelBuilder.Entity("beneficiarios_dif_api.Entities.Rol", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
